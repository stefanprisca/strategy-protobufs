/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.tfc.Coord', null, global);
goog.exportSymbol('proto.tfc.Edge', null, global);
goog.exportSymbol('proto.tfc.EdgeAttributes', null, global);
goog.exportSymbol('proto.tfc.GameBoard', null, global);
goog.exportSymbol('proto.tfc.GameData', null, global);
goog.exportSymbol('proto.tfc.GameState', null, global);
goog.exportSymbol('proto.tfc.Intersection', null, global);
goog.exportSymbol('proto.tfc.IntersectionAttributes', null, global);
goog.exportSymbol('proto.tfc.Player', null, global);
goog.exportSymbol('proto.tfc.PlayerProfile', null, global);
goog.exportSymbol('proto.tfc.Resource', null, global);
goog.exportSymbol('proto.tfc.Road', null, global);
goog.exportSymbol('proto.tfc.Settlement', null, global);
goog.exportSymbol('proto.tfc.Tile', null, global);
goog.exportSymbol('proto.tfc.TileAttributes', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.IntersectionAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.IntersectionAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.IntersectionAttributes.displayName = 'proto.tfc.IntersectionAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.IntersectionAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.IntersectionAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.IntersectionAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.IntersectionAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    settlement: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.IntersectionAttributes}
 */
proto.tfc.IntersectionAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.IntersectionAttributes;
  return proto.tfc.IntersectionAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.IntersectionAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.IntersectionAttributes}
 */
proto.tfc.IntersectionAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tfc.Settlement} */ (reader.readEnum());
      msg.setSettlement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.IntersectionAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.IntersectionAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.IntersectionAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.IntersectionAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettlement();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Settlement settlement = 1;
 * @return {!proto.tfc.Settlement}
 */
proto.tfc.IntersectionAttributes.prototype.getSettlement = function() {
  return /** @type {!proto.tfc.Settlement} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.tfc.Settlement} value */
proto.tfc.IntersectionAttributes.prototype.setSettlement = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.Coord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.Coord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.Coord.displayName = 'proto.tfc.Coord';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.Coord.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.Coord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.Coord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.Coord.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    z: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.Coord}
 */
proto.tfc.Coord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.Coord;
  return proto.tfc.Coord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.Coord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.Coord}
 */
proto.tfc.Coord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.Coord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.Coord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.Coord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.Coord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 X = 1;
 * @return {number}
 */
proto.tfc.Coord.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tfc.Coord.prototype.setX = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Y = 2;
 * @return {number}
 */
proto.tfc.Coord.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tfc.Coord.prototype.setY = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 Z = 3;
 * @return {number}
 */
proto.tfc.Coord.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tfc.Coord.prototype.setZ = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.Intersection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.Intersection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.Intersection.displayName = 'proto.tfc.Intersection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.Intersection.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.Intersection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.Intersection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.Intersection.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    incidentedge: jspb.Message.getFieldWithDefault(msg, 2, 0),
    attributes: (f = msg.getAttributes()) && proto.tfc.IntersectionAttributes.toObject(includeInstance, f),
    coordinates: (f = msg.getCoordinates()) && proto.tfc.Coord.toObject(includeInstance, f),
    lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.Intersection}
 */
proto.tfc.Intersection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.Intersection;
  return proto.tfc.Intersection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.Intersection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.Intersection}
 */
proto.tfc.Intersection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIncidentedge(value);
      break;
    case 3:
      var value = new proto.tfc.IntersectionAttributes;
      reader.readMessage(value,proto.tfc.IntersectionAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 5:
      var value = new proto.tfc.Coord;
      reader.readMessage(value,proto.tfc.Coord.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.Intersection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.Intersection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.Intersection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.Intersection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getIncidentedge();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tfc.IntersectionAttributes.serializeBinaryToWriter
    );
  }
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tfc.Coord.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.tfc.Intersection.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tfc.Intersection.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 incidentEdge = 2;
 * @return {number}
 */
proto.tfc.Intersection.prototype.getIncidentedge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tfc.Intersection.prototype.setIncidentedge = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional IntersectionAttributes attributes = 3;
 * @return {?proto.tfc.IntersectionAttributes}
 */
proto.tfc.Intersection.prototype.getAttributes = function() {
  return /** @type{?proto.tfc.IntersectionAttributes} */ (
    jspb.Message.getWrapperField(this, proto.tfc.IntersectionAttributes, 3));
};


/** @param {?proto.tfc.IntersectionAttributes|undefined} value */
proto.tfc.Intersection.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tfc.Intersection.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.Intersection.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Coord coordinates = 5;
 * @return {?proto.tfc.Coord}
 */
proto.tfc.Intersection.prototype.getCoordinates = function() {
  return /** @type{?proto.tfc.Coord} */ (
    jspb.Message.getWrapperField(this, proto.tfc.Coord, 5));
};


/** @param {?proto.tfc.Coord|undefined} value */
proto.tfc.Intersection.prototype.setCoordinates = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.tfc.Intersection.prototype.clearCoordinates = function() {
  this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.Intersection.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp last_updated = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tfc.Intersection.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.tfc.Intersection.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tfc.Intersection.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.Intersection.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.TileAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.TileAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.TileAttributes.displayName = 'proto.tfc.TileAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.TileAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.TileAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.TileAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.TileAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rollnumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.TileAttributes}
 */
proto.tfc.TileAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.TileAttributes;
  return proto.tfc.TileAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.TileAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.TileAttributes}
 */
proto.tfc.TileAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tfc.Resource} */ (reader.readEnum());
      msg.setResource(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRollnumber(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.TileAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.TileAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.TileAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.TileAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRollnumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional Resource resource = 1;
 * @return {!proto.tfc.Resource}
 */
proto.tfc.TileAttributes.prototype.getResource = function() {
  return /** @type {!proto.tfc.Resource} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.tfc.Resource} value */
proto.tfc.TileAttributes.prototype.setResource = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 rollNumber = 2;
 * @return {number}
 */
proto.tfc.TileAttributes.prototype.getRollnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tfc.TileAttributes.prototype.setRollnumber = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp last_updated = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tfc.TileAttributes.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.tfc.TileAttributes.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tfc.TileAttributes.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.TileAttributes.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.Tile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.Tile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.Tile.displayName = 'proto.tfc.Tile';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.Tile.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.Tile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.Tile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.Tile.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    outercomponent: jspb.Message.getFieldWithDefault(msg, 2, 0),
    attributes: (f = msg.getAttributes()) && proto.tfc.TileAttributes.toObject(includeInstance, f),
    lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.Tile}
 */
proto.tfc.Tile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.Tile;
  return proto.tfc.Tile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.Tile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.Tile}
 */
proto.tfc.Tile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutercomponent(value);
      break;
    case 3:
      var value = new proto.tfc.TileAttributes;
      reader.readMessage(value,proto.tfc.TileAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.Tile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.Tile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.Tile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.Tile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOutercomponent();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tfc.TileAttributes.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.tfc.Tile.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tfc.Tile.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 outerComponent = 2;
 * @return {number}
 */
proto.tfc.Tile.prototype.getOutercomponent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tfc.Tile.prototype.setOutercomponent = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional TileAttributes attributes = 3;
 * @return {?proto.tfc.TileAttributes}
 */
proto.tfc.Tile.prototype.getAttributes = function() {
  return /** @type{?proto.tfc.TileAttributes} */ (
    jspb.Message.getWrapperField(this, proto.tfc.TileAttributes, 3));
};


/** @param {?proto.tfc.TileAttributes|undefined} value */
proto.tfc.Tile.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tfc.Tile.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.Tile.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp last_updated = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tfc.Tile.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.tfc.Tile.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tfc.Tile.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.Tile.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.EdgeAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.EdgeAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.EdgeAttributes.displayName = 'proto.tfc.EdgeAttributes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.EdgeAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.EdgeAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.EdgeAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.EdgeAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    road: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.EdgeAttributes}
 */
proto.tfc.EdgeAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.EdgeAttributes;
  return proto.tfc.EdgeAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.EdgeAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.EdgeAttributes}
 */
proto.tfc.EdgeAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tfc.Road} */ (reader.readEnum());
      msg.setRoad(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.EdgeAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.EdgeAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.EdgeAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.EdgeAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoad();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Road road = 1;
 * @return {!proto.tfc.Road}
 */
proto.tfc.EdgeAttributes.prototype.getRoad = function() {
  return /** @type {!proto.tfc.Road} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.tfc.Road} value */
proto.tfc.EdgeAttributes.prototype.setRoad = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.Edge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.Edge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.Edge.displayName = 'proto.tfc.Edge';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.Edge.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.Edge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.Edge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.Edge.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    origin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    twin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    incidenttile: jspb.Message.getFieldWithDefault(msg, 4, 0),
    next: jspb.Message.getFieldWithDefault(msg, 5, 0),
    prev: jspb.Message.getFieldWithDefault(msg, 6, 0),
    orientation: jspb.Message.getFieldWithDefault(msg, 8, ""),
    attributes: (f = msg.getAttributes()) && proto.tfc.EdgeAttributes.toObject(includeInstance, f),
    lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.Edge}
 */
proto.tfc.Edge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.Edge;
  return proto.tfc.Edge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.Edge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.Edge}
 */
proto.tfc.Edge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrigin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTwin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIncidenttile(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNext(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrev(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrientation(value);
      break;
    case 7:
      var value = new proto.tfc.EdgeAttributes;
      reader.readMessage(value,proto.tfc.EdgeAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.Edge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.Edge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.Edge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.Edge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOrigin();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTwin();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getIncidenttile();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNext();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getPrev();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getOrientation();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.tfc.EdgeAttributes.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.tfc.Edge.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tfc.Edge.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 origin = 2;
 * @return {number}
 */
proto.tfc.Edge.prototype.getOrigin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tfc.Edge.prototype.setOrigin = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 twin = 3;
 * @return {number}
 */
proto.tfc.Edge.prototype.getTwin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tfc.Edge.prototype.setTwin = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 incidentTile = 4;
 * @return {number}
 */
proto.tfc.Edge.prototype.getIncidenttile = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.tfc.Edge.prototype.setIncidenttile = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 next = 5;
 * @return {number}
 */
proto.tfc.Edge.prototype.getNext = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.tfc.Edge.prototype.setNext = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 prev = 6;
 * @return {number}
 */
proto.tfc.Edge.prototype.getPrev = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.tfc.Edge.prototype.setPrev = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string orientation = 8;
 * @return {string}
 */
proto.tfc.Edge.prototype.getOrientation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.tfc.Edge.prototype.setOrientation = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional EdgeAttributes attributes = 7;
 * @return {?proto.tfc.EdgeAttributes}
 */
proto.tfc.Edge.prototype.getAttributes = function() {
  return /** @type{?proto.tfc.EdgeAttributes} */ (
    jspb.Message.getWrapperField(this, proto.tfc.EdgeAttributes, 7));
};


/** @param {?proto.tfc.EdgeAttributes|undefined} value */
proto.tfc.Edge.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.tfc.Edge.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.Edge.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp last_updated = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tfc.Edge.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.tfc.Edge.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tfc.Edge.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.Edge.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.GameBoard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.GameBoard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.GameBoard.displayName = 'proto.tfc.GameBoard';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.GameBoard.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.GameBoard.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.GameBoard} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.GameBoard.toObject = function(includeInstance, msg) {
  var f, obj = {
    intersectionsMap: (f = msg.getIntersectionsMap()) ? f.toObject(includeInstance, proto.tfc.Intersection.toObject) : [],
    tilesMap: (f = msg.getTilesMap()) ? f.toObject(includeInstance, proto.tfc.Tile.toObject) : [],
    edgesMap: (f = msg.getEdgesMap()) ? f.toObject(includeInstance, proto.tfc.Edge.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.GameBoard}
 */
proto.tfc.GameBoard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.GameBoard;
  return proto.tfc.GameBoard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.GameBoard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.GameBoard}
 */
proto.tfc.GameBoard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getIntersectionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.tfc.Intersection.deserializeBinaryFromReader, 0);
         });
      break;
    case 2:
      var value = msg.getTilesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.tfc.Tile.deserializeBinaryFromReader, 0);
         });
      break;
    case 3:
      var value = msg.getEdgesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.tfc.Edge.deserializeBinaryFromReader, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.GameBoard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.GameBoard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.GameBoard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.GameBoard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntersectionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.tfc.Intersection.serializeBinaryToWriter);
  }
  f = message.getTilesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.tfc.Tile.serializeBinaryToWriter);
  }
  f = message.getEdgesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.tfc.Edge.serializeBinaryToWriter);
  }
};


/**
 * map<uint32, Intersection> intersections = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.tfc.Intersection>}
 */
proto.tfc.GameBoard.prototype.getIntersectionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.tfc.Intersection>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.tfc.Intersection));
};


proto.tfc.GameBoard.prototype.clearIntersectionsMap = function() {
  this.getIntersectionsMap().clear();
};


/**
 * map<uint32, Tile> tiles = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.tfc.Tile>}
 */
proto.tfc.GameBoard.prototype.getTilesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.tfc.Tile>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.tfc.Tile));
};


proto.tfc.GameBoard.prototype.clearTilesMap = function() {
  this.getTilesMap().clear();
};


/**
 * map<uint32, Edge> edges = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.tfc.Edge>}
 */
proto.tfc.GameBoard.prototype.getEdgesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.tfc.Edge>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.tfc.Edge));
};


proto.tfc.GameBoard.prototype.clearEdgesMap = function() {
  this.getEdgesMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.PlayerProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.PlayerProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.PlayerProfile.displayName = 'proto.tfc.PlayerProfile';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.PlayerProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.PlayerProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.PlayerProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.PlayerProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcesMap: (f = msg.getResourcesMap()) ? f.toObject(includeInstance, undefined) : [],
    winningpoints: jspb.Message.getFieldWithDefault(msg, 2, 0),
    settlements: jspb.Message.getFieldWithDefault(msg, 3, 0),
    roads: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.PlayerProfile}
 */
proto.tfc.PlayerProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.PlayerProfile;
  return proto.tfc.PlayerProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.PlayerProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.PlayerProfile}
 */
proto.tfc.PlayerProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getResourcesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0);
         });
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWinningpoints(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSettlements(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoads(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.PlayerProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.PlayerProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.PlayerProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.PlayerProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getWinningpoints();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSettlements();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRoads();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * map<int32, int32> resources = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.tfc.PlayerProfile.prototype.getResourcesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


proto.tfc.PlayerProfile.prototype.clearResourcesMap = function() {
  this.getResourcesMap().clear();
};


/**
 * optional int32 winningPoints = 2;
 * @return {number}
 */
proto.tfc.PlayerProfile.prototype.getWinningpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tfc.PlayerProfile.prototype.setWinningpoints = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 settlements = 3;
 * @return {number}
 */
proto.tfc.PlayerProfile.prototype.getSettlements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tfc.PlayerProfile.prototype.setSettlements = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 roads = 4;
 * @return {number}
 */
proto.tfc.PlayerProfile.prototype.getRoads = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.tfc.PlayerProfile.prototype.setRoads = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp last_updated = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tfc.PlayerProfile.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.tfc.PlayerProfile.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tfc.PlayerProfile.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.PlayerProfile.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tfc.GameData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tfc.GameData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tfc.GameData.displayName = 'proto.tfc.GameData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tfc.GameData.prototype.toObject = function(opt_includeInstance) {
  return proto.tfc.GameData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tfc.GameData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.GameData.toObject = function(includeInstance, msg) {
  var f, obj = {
    board: (f = msg.getBoard()) && proto.tfc.GameBoard.toObject(includeInstance, f),
    profilesMap: (f = msg.getProfilesMap()) ? f.toObject(includeInstance, proto.tfc.PlayerProfile.toObject) : [],
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    identitymapMap: (f = msg.getIdentitymapMap()) ? f.toObject(includeInstance, undefined) : [],
    lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tfc.GameData}
 */
proto.tfc.GameData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tfc.GameData;
  return proto.tfc.GameData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tfc.GameData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tfc.GameData}
 */
proto.tfc.GameData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tfc.GameBoard;
      reader.readMessage(value,proto.tfc.GameBoard.deserializeBinaryFromReader);
      msg.setBoard(value);
      break;
    case 2:
      var value = msg.getProfilesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.tfc.PlayerProfile.deserializeBinaryFromReader, 0);
         });
      break;
    case 3:
      var value = /** @type {!proto.tfc.GameState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = msg.getIdentitymapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readBytes, null, 0);
         });
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tfc.GameData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tfc.GameData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tfc.GameData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tfc.GameData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tfc.GameBoard.serializeBinaryToWriter
    );
  }
  f = message.getProfilesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.tfc.PlayerProfile.serializeBinaryToWriter);
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getIdentitymapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeBytes);
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional GameBoard board = 1;
 * @return {?proto.tfc.GameBoard}
 */
proto.tfc.GameData.prototype.getBoard = function() {
  return /** @type{?proto.tfc.GameBoard} */ (
    jspb.Message.getWrapperField(this, proto.tfc.GameBoard, 1));
};


/** @param {?proto.tfc.GameBoard|undefined} value */
proto.tfc.GameData.prototype.setBoard = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tfc.GameData.prototype.clearBoard = function() {
  this.setBoard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.GameData.prototype.hasBoard = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<int32, PlayerProfile> profiles = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.tfc.PlayerProfile>}
 */
proto.tfc.GameData.prototype.getProfilesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.tfc.PlayerProfile>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.tfc.PlayerProfile));
};


proto.tfc.GameData.prototype.clearProfilesMap = function() {
  this.getProfilesMap().clear();
};


/**
 * optional GameState state = 3;
 * @return {!proto.tfc.GameState}
 */
proto.tfc.GameData.prototype.getState = function() {
  return /** @type {!proto.tfc.GameState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.tfc.GameState} value */
proto.tfc.GameData.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * map<int32, bytes> identityMap = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!(string|Uint8Array)>}
 */
proto.tfc.GameData.prototype.getIdentitymapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.tfc.GameData.prototype.clearIdentitymapMap = function() {
  this.getIdentitymapMap().clear();
};


/**
 * optional google.protobuf.Timestamp last_updated = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tfc.GameData.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.tfc.GameData.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.tfc.GameData.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tfc.GameData.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * @enum {number}
 */
proto.tfc.Settlement = {
  NOSETTLE: 0,
  REDSETTLE: 1,
  GREENSETTLE: 2,
  BLUESETTLE: 3
};

/**
 * @enum {number}
 */
proto.tfc.Resource = {
  HILL: 0,
  FOREST: 1,
  MOUNTAIN: 2,
  FIELD: 3,
  PASTURE: 4,
  CAMP: 5
};

/**
 * @enum {number}
 */
proto.tfc.Road = {
  NOROAD: 0,
  REDROAD: 1,
  GREENROAD: 2,
  BLUEROAD: 3
};

/**
 * @enum {number}
 */
proto.tfc.Player = {
  RED: 0,
  GREEN: 1,
  BLUE: 2
};

/**
 * @enum {number}
 */
proto.tfc.GameState = {
  JOINING: 0,
  RROLL: 1,
  RTRADE: 2,
  RDEV: 3,
  BROLL: 4,
  BTRADE: 5,
  BDEV: 6,
  GROLL: 7,
  GTRADE: 8,
  GDEV: 9,
  RWON: 10,
  BWON: 11,
  GWON: 12
};

goog.object.extend(exports, proto.tfc);
